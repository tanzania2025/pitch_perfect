version: '3.8'

services:
  pitch-perfect-backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: pitch-perfect-api
    ports:
      - "8000:8000"
    environment:
      # API Keys - Load from .env file or set these in your environment
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}

      # Application Settings
      - PYTHONPATH=/home/app
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8000

    volumes:
      # Mount outputs directory to persist generated files
      - ../outputs:/home/app/outputs
      # Mount config for easy configuration changes
      - ../config:/home/app/config:ro
      # Mount models directory to persist downloaded models
      - ../models:/home/app/models

    env_file:
      - ../.env  # Load environment variables from .env file

    restart: unless-stopped

    # Resource limits for production
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Add a reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: pitch-perfect-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Add SSL certificates if needed
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - pitch-perfect-backend
    restart: unless-stopped
    profiles:
      - production  # Only start with --profile production

# Networks (optional for multi-service setups)
networks:
  pitch-perfect-network:
    driver: bridge

# Volumes for persistent storage
volumes:
  models-volume:
    driver: local
  outputs-volume:
    driver: local
